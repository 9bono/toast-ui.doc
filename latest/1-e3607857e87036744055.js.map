{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Header.js","webpack:///./src/components/Footer.js","webpack:///./src/components/SearchList.js","webpack:///./src/components/SearchBar.js","webpack:///./src/components/ToggleButton.js","webpack:///./src/components/SubListGroups.js","webpack:///./src/components/ListItem.js","webpack:///./src/components/ListGroup.js","webpack:///./src/components/ApiNavigation.js","webpack:///./src/components/ExampleNavigation.js","webpack:///./src/components/LNB.js","webpack:///./src/components/Resizable.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer.js","webpack:///./node_modules/core-js/modules/es6.regexp.constructor.js","webpack:///./src/components/Tabs.js","webpack:///./src/components/TabContent.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["StaticQueryContext","loader","React","StaticQueryDataRenderer","staticQueryData","data","query","render","finalData","StaticQuery","props","children","Header","this","logo","title","version","className","to","src","alt","href","target","rel","Component","Footer","infoList","map","linkUrl","item","key","TYPE_MAP","REPLACED_PATTERN","hightliging","escapeValue","value","replace","pattern","RegExp","joined","fullText","dangerouslySetInnerHTML","__html","getListItemComponent","movedIndex","pid","name","parentPid","getResultComponent","result","component","hasClass","element","elClassName","toLowerCase","str","defaultState","searching","SearchBar","attachEvent","document","detachEvent","handleKeyDown","keyCode","ev","setState","index","prevState","handleKeyUp","url","moveToPage","search","handleFocus","handleClick","resetState","findMatchingValues","foundValue","navigate","type","placeholder","onKeyDown","onKeyUp","onFocus","SearchBarWrapper","ToggleButton","opened","onClick","SubListGroups","filter","getSubListGroupComponent","selectedId","items","toggleItemState","isSelected","childNodes","hasChildNodes","selected","pathPrefix","ListGroup","ApiNavigation","filterItems","NavigationWrapper","ExampleNavigation","LNB","useExample","tabIndex","selectedNavItemId","width","style","Resizable","handleMouseDown","handleMouseUp","onMouseDown","left","LNB_WIDTH","Layout","changeWidth","Math","header","footer","lnbWidth","state","paddingLeft","handleMouseMove","LayoutWrapper","m","module","require","global","inheritIfRequired","dP","f","gOPN","isRegExp","$flags","$RegExp","Base","proto","prototype","re1","re2","CORRECT_NEW","p","tiRE","piRE","fiU","undefined","constructor","source","call","proxy","configurable","get","set","it","keys","i","length","Tabs","selectTab","child","TabContent","hasIframe","ProdPageRenderer","location","pageResources"],"mappings":"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","file":"1-e3607857e87036744055.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'gatsby';\n\nclass Header extends React.Component {\n  render() {\n    const {\n      logo,\n      title,\n      version\n    } = this.props.data;\n\n    return (\n      <header className=\"header\">\n        <h1 className=\"logo\">\n          <Link to={logo.linkUrl}>\n            <img src={logo.src} alt=\"logo\" />\n          </Link>\n        </h1>\n        {title && title.text ?\n          <span className=\"info-wrapper\">\n            <span className=\"project-name\">/</span>\n            <span className=\"project-name\">\n              <a\n                href={title.linkUrl}\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n              >\n                {title.text}\n              </a>\n            </span>\n          </span> : null}\n        {version ?\n          <span className={`info-wrapper${title && title.text ? ' has-title' : ''}`}>\n            <span className=\"splitter\">|</span>\n            <span className=\"version\">v{version}</span>\n          </span> : null}\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  data: PropTypes.object\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer className=\"footer\">\n        {this.props.infoList.map((item, index) => {\n          const {\n            linkUrl,\n            title\n          } = item;\n\n          return (\n            <span\n              className=\"info\"\n              key={`footer-info-${index}`}\n            >\n              <a\n                href={linkUrl}\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n              >\n                {title}\n              </a>\n            </span>\n          );\n        })}\n      </footer>\n    );\n  }\n}\n\nFooter.propTypes = {\n  infoList: PropTypes.array\n};\n\nexport default Footer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Link from 'gatsby-link';\n\nconst TYPE_MAP = {\n  'class': 'CLASSES',\n  'namespace': 'NAMESAPCES',\n  'module': 'MODULES',\n  'external': 'EXTERNALS',\n  'mixin': 'MIXINS',\n  'global': 'GLOBALS',\n  'example': 'Examples'\n};\n\nconst REPLACED_PATTERN = /[-[\\]/{}()*+?.\\\\^$|]/g;\nconst REPLACED_VALUE = '\\\\$&';\n\nclass SearchList extends React.Component {\n  hightliging(fullText) {\n    const escapeValue = this.props.value.replace(REPLACED_PATTERN, REPLACED_VALUE);\n\n    let pattern = new RegExp(escapeValue, 'ig');\n\n    const joined = fullText.replace(pattern, (text) => {\n      return `<strong>${text}</strong>`;\n    });\n\n    return (\n      <span dangerouslySetInnerHTML={{__html: joined}} />\n    );\n  }\n\n  getListItemComponent(item, index) {\n    const {\n      movedIndex\n    } = this.props;\n\n    const {\n      pid,\n      name,\n      parentPid\n    } = item.node;\n\n    return (\n      <li\n        className={`item${movedIndex === index ? ' selected' : ''}`}\n        key={`search-item-${index}`}\n      >\n        <Link\n          to={`/${pid}`}\n          className=\"ellipsis\"\n        >\n          {this.hightliging(name)}\n          <span className=\"nav-group-title\">\n            {TYPE_MAP[parentPid] || parentPid}\n          </span>\n        </Link>\n      </li>\n    );\n  }\n\n  getResultComponent() {\n    const {\n      result\n    } = this.props;\n\n    let component;\n\n    if (result.length) {\n      component = (\n        <ul>\n          {result.map((item, index) => this.getListItemComponent(item, index))}\n        </ul>\n      );\n    } else {\n      component = (\n        <p className=\"no-result\">No Result</p>\n      );\n    }\n\n    return component;\n  }\n\n  render() {\n    if (this.props.searching) {\n      return (\n        <div className=\"search-list\">\n          {this.getResultComponent()}\n        </div>\n      );\n    }\n\n    return null;\n  }\n}\n\nSearchList.propTypes = {\n  searching: PropTypes.bool,\n  value: PropTypes.string,\n  result: PropTypes.array,\n  movedIndex: PropTypes.number\n};\n\nexport default SearchList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {StaticQuery, graphql, navigate} from 'gatsby';\n\nimport SearchList from '../components/SearchList';\n\nconst KEY_CODE_ENTER = 13;\nconst KEY_CODE_UP = 38;\nconst KEY_CODE_DOWN = 40;\n\nconst SEARCH_BAR_CLASSNAME = 'search-container';\n\nconst hasClass = (element, className) => {\n  const elClassName = element && element.getAttribute &&\n      (element.getAttribute('class') || element.getAttribute('className') || '');\n\n  return elClassName.indexOf(className) > -1;\n};\n\nconst toLowerCase = (str) => {\n  return str.toLowerCase();\n};\n\nconst defaultState = {\n  searching: false,\n  value: null,\n  movedIndex: -1,\n  result: []\n};\n\nclass SearchBar extends React.Component {\n  constructor() {\n    super();\n\n    this.state = defaultState;\n\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleKeyUp = this.handleKeyUp.bind(this);\n    this.handleFocus = this.handleFocus.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  attachEvent() {\n    document.addEventListener('click', this.handleClick);\n  }\n\n  detachEvent() {\n    document.removeEventListener('click', this.handleClick);\n  }\n\n  handleKeyDown(ev) {\n    const {\n      keyCode\n    } = ev;\n\n    this.setState((prevState) => {\n      let index = prevState.movedIndex;\n\n      if (keyCode === KEY_CODE_UP &&\n        index > 0) {\n        index -= 1;\n      } else if (keyCode === KEY_CODE_DOWN &&\n        index < this.state.result.length - 1) {\n        index += 1;\n      }\n\n      return {\n        movedIndex: index\n      };\n    });\n  }\n\n  handleKeyUp(ev) {\n    const {\n      keyCode,\n      target\n    } = ev;\n\n    const {\n      result,\n      movedIndex\n    } = this.state;\n\n    if (keyCode === KEY_CODE_UP ||\n      keyCode === KEY_CODE_DOWN) {\n      return;\n    }\n\n    if (keyCode === KEY_CODE_ENTER &&\n      result.length && movedIndex > -1) {\n      let url = `/${result[movedIndex].node.pid}`;\n      this.moveToPage(url);\n    } else {\n      this.search(target.value);\n    }\n  }\n\n  handleFocus(ev) {\n    const {\n      value\n    } = ev.target;\n\n    this.attachEvent();\n\n    if (value.length) {\n      this.search(value);\n    }\n  }\n\n  handleClick(ev) {\n    let element = ev.target;\n\n    while (element && !hasClass(element, SEARCH_BAR_CLASSNAME)) {\n      element = element.parentElement;\n    }\n\n    if (!element) {\n      this.resetState();\n    }\n  }\n\n  search(query) {\n    this.setState({\n      searching: true,\n      value: query,\n      result: this.findMatchingValues(query)\n    });\n  }\n\n  findMatchingValues(value) {\n    return this.props.data.filter(item => {\n      const foundValue = toLowerCase(item.node.name);\n\n      return (value !== '' && foundValue.indexOf(toLowerCase(value)) > -1);\n    });\n  }\n\n  moveToPage(url) {\n    if (url) {\n      navigate(url);\n    }\n\n    this.resetState();\n  }\n\n  resetState() {\n    this.detachEvent();\n\n    this.setState({\n      searching: false,\n      value: null,\n      result: [],\n      movedIndex: -1\n    });\n  }\n\n  render() {\n    const {\n      searching,\n      value,\n      result,\n      movedIndex\n    } = this.state;\n\n    return (\n      <div className={`search-container${searching ? ' searching' : ''}`}>\n        <div className=\"search-box\">\n          <span className={`btn-search${searching ? ' searching' : ''}`}>\n            <span className=\"icon\">\n              <span className=\"oval\"></span>\n              <span className=\"stick\"></span>\n            </span>\n          </span>\n          <input\n            type=\"text\"\n            placeholder=\"Search\"\n            onKeyDown={this.handleKeyDown}\n            onKeyUp={this.handleKeyUp}\n            onFocus={this.handleFocus}\n          />\n        </div>\n        <hr className={`line ${searching ? 'show' : 'hide'}`} />\n        <SearchList\n          searching={searching}\n          value={value}\n          result={result}\n          movedIndex={movedIndex}\n        />\n      </div>\n    );\n  }\n}\n\nconst SearchBarWrapper = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allSearchKeywordsJson {\n          edges {\n            node {\n              pid\n              parentPid\n              name\n            }\n          }\n        }\n      }\n    `}\n    render={data => <SearchBar data={data.allSearchKeywordsJson.edges} />}\n  />\n);\n\nSearchBar.propTypes = {\n  data: PropTypes.array\n};\n\nexport default SearchBarWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ToggleButton = (props) => {\n  const {\n    opened,\n    handleClick\n  } = props;\n\n  return (\n    <button\n      className={`btn-toggle${opened ? ' opened' : ''}`}\n      onClick={handleClick}\n    >\n      <span className=\"icon\"></span>\n    </button>\n  );\n};\n\nToggleButton.propTypes = {\n  opened: PropTypes.bool,\n  handleClick: PropTypes.func\n};\n\nexport default ToggleButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'gatsby';\n\nclass SubListGroups extends React.Component {\n  filter(kind) {\n    return this.props.items.filter(item => {\n      return item.kind === kind;\n    });\n  }\n\n  getSubListGroupComponent(title, items) {\n    const {\n      selectedId\n    } = this.props;\n\n    if (items && items.length) {\n      return (\n        <div className=\"subnav-group\">\n          <h3 className=\"title\">{title}</h3>\n          <ul>\n            {items.map((item, index) => {\n              const {\n                pid,\n                name\n              } = item;\n\n              return (\n                <li key={`nav-item-${index}`}>\n                  <p className={`nav-item${selectedId === pid ? ' selected' : ''}`}>\n                    <Link\n                      to={`/${pid}`}\n                      className=\"ellipsis\"\n                    >\n                      <span>\n                        {name}\n                      </span>\n                    </Link>\n                  </p>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      );\n    }\n\n    return null;\n  }\n\n  render() {\n    const {\n      opened\n    } = this.props;\n\n    return (\n      <div className={opened ? 'show' : 'hide'}>\n        {this.getSubListGroupComponent('EXTENDS', this.filter('augment'))}\n        {this.getSubListGroupComponent('MIXES', this.filter('mix'))}\n        {this.getSubListGroupComponent('STATIC PROPERTIES', this.filter('static-property'))}\n        {this.getSubListGroupComponent('STATIC METHODS', this.filter('static-method'))}\n        {this.getSubListGroupComponent('INSTANCE METHODS', this.filter('instance-method'))}\n        {this.getSubListGroupComponent('EVENTS', this.filter('event'))}\n      </div>\n    );\n  }\n}\n\nSubListGroups.propTypes = {\n  selectedId: PropTypes.string,\n  name: PropTypes.string,\n  opened: PropTypes.bool,\n  items: PropTypes.array\n};\n\nexport default SubListGroups;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {navigate} from 'gatsby';\n\nimport ToggleButton from '../components/ToggleButton';\nimport SubListGroups from '../components/SubListGroups';\n\n/* global __PATH_PREFIX__*/\nconst pathPrefix = __PATH_PREFIX__;\n\nclass ListItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      opened: this.isSelected()\n    };\n\n    this.toggleItemState = this.toggleItemState.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(ev) {\n    ev.preventDefault();\n\n    if (!this.isSelected()) {\n      navigate(`/${this.props.pid}`);\n    } else {\n      this.toggleItemState();\n    }\n  }\n\n  toggleItemState() {\n    this.setState((prevState) => ({\n      opened: !prevState.opened\n    }));\n  }\n\n  isSelected() {\n    const {\n      selectedId,\n      pid\n    } = this.props;\n\n    return selectedId ? (selectedId.split('#').shift() === pid) : false;\n  }\n\n  render() {\n    const {\n      selectedId,\n      pid,\n      name,\n      childNodes\n    } = this.props;\n    const {opened} = this.state;\n    const hasChildNodes = !!(childNodes && childNodes.length);\n    const selected = this.isSelected();\n\n    return (\n      <li>\n        <p className={`nav-item${selected ? ' selected' : ''}`}>\n          <a\n            href={`${pathPrefix}/${pid}`}\n            className=\"ellipsis\"\n            onClick={this.handleClick}\n          >\n            <span>\n              {name}\n            </span>\n          </a>\n          {hasChildNodes &&\n            <ToggleButton\n              hasChildNodes={hasChildNodes}\n              opened={opened}\n              handleClick={this.toggleItemState}\n            />}\n        </p>\n        {hasChildNodes &&\n          <SubListGroups\n            selectedId={selectedId}\n            hasChildNodes={hasChildNodes}\n            opened={opened}\n            items={childNodes}\n          />}\n      </li>\n    );\n  }\n}\n\nListItem.propTypes = {\n  selectedId: PropTypes.string,\n  pid: PropTypes.string,\n  name: PropTypes.string,\n  childNodes: PropTypes.array\n};\n\nexport default ListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ListItem from '../components/ListItem';\n\nclass ListGroup extends React.Component {\n  render() {\n    const {\n      selectedId,\n      title,\n      items\n    } = this.props;\n\n    if (items.length) {\n      return (\n        <div className=\"nav-group\">\n          {title && <h2 className=\"title\">{title}</h2>}\n          <ul>\n            {items.map((item, index) => {\n              const {\n                pid,\n                name,\n                childNodes\n              } = item.node;\n\n              return (\n                <ListItem\n                  key={`nav-item-${index}`}\n                  selectedId={selectedId}\n                  pid={pid}\n                  name={name}\n                  childNodes={childNodes}\n                />\n              );\n            })}\n          </ul>\n        </div>\n      );\n    }\n\n    return null;\n  }\n}\n\nListGroup.propTypes = {\n  selectedId: PropTypes.string,\n  title: PropTypes.string,\n  items: PropTypes.array\n};\n\nexport default ListGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {StaticQuery, graphql} from 'gatsby';\n\nimport ListGroup from '../components/ListGroup';\n\nclass ApiNavigation extends React.Component {\n  filterItems(type) {\n    return this.props.items.filter(item => {\n      return item.node.parentPid === type;\n    });\n  }\n\n  render() {\n    const {\n      selectedId\n    } = this.props;\n\n    return (\n      <div className=\"nav\">\n        <ListGroup\n          selectedId={selectedId}\n          title={'MODULES'}\n          items={this.filterItems('module')}\n        />\n        <ListGroup\n          selectedId={selectedId}\n          title={'EXTERNALS'}\n          items={this.filterItems('external')}\n        />\n        <ListGroup\n          selectedId={selectedId}\n          title={'CLASSES'}\n          items={this.filterItems('class')}\n        />\n        <ListGroup\n          selectedId={selectedId}\n          title={'NAMESPACES'}\n          items={this.filterItems('namespace')}\n        />\n        <ListGroup\n          selectedId={selectedId}\n          title={'MIXINS'}\n          items={this.filterItems('mixin')}\n        />\n        <ListGroup\n          selectedId={selectedId}\n          title={'TYPEDEF'}\n          items={this.filterItems('typedef')}\n        />\n        <ListGroup\n          selectedId={selectedId}\n          title={'GLOBAL'}\n          items={this.filterItems('global')}\n        />\n      </div>\n    );\n  }\n}\n\nconst NavigationWrapper = (props) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allNavigationJson(filter: {type: {eq: \"api\"}}) {\n          edges {\n            node {\n              pid\n              parentPid\n              name\n              opened\n              childNodes {\n                pid\n                name\n                kind\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={data => <ApiNavigation items={data.allNavigationJson.edges} {...props} />}\n  />\n);\n\nApiNavigation.propTypes = {\n  selectedId: PropTypes.string,\n  items: PropTypes.array\n};\n\nexport default NavigationWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {StaticQuery, graphql} from 'gatsby';\n\nimport ListGroup from '../components/ListGroup';\n\nclass ExampleNavigation extends React.Component {\n  render() {\n    const {\n      selectedId,\n      items\n    } = this.props;\n\n    return (\n      <div className=\"nav nav-example\">\n        <ListGroup\n          selectedId={selectedId}\n          items={items}\n        />\n      </div>\n    );\n  }\n}\n\nconst NavigationWrapper = (props) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allNavigationJson(filter: {type: {eq: \"example\"}}) {\n          edges {\n            node {\n              pid\n              name\n            }\n          }\n        }\n      }\n    `}\n    render={data => <ExampleNavigation items={data.allNavigationJson.edges} {...props} />}\n  />\n);\n\nExampleNavigation.propTypes = {\n  selectedId: PropTypes.string,\n  items: PropTypes.array\n};\n\nexport default NavigationWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport SearchBar from '../components/SearchBar';\nimport Tabs from '../components/Tabs';\nimport TabContent from '../components/TabContent';\nimport ApiNavigation from '../components/ApiNavigation';\nimport ExampleNavigation from '../components/ExampleNavigation';\n\nclass LNB extends React.Component {\n  render() {\n    const {\n      useExample,\n      tabIndex,\n      selectedNavItemId,\n      width\n    } = this.props;\n\n    return (\n      <aside\n        className=\"lnb\"\n        style={{width}}\n      >\n        <SearchBar />\n        {useExample ?\n          <Tabs tabIndex={tabIndex}>\n            <TabContent name=\"API\">\n              <ApiNavigation\n                selectedId={selectedNavItemId}\n              />\n            </TabContent>\n            <TabContent name=\"Examples\">\n              <ExampleNavigation\n                selectedId={selectedNavItemId}\n              />\n            </TabContent>\n          </Tabs> :\n          <ApiNavigation\n            selectedId={selectedNavItemId}\n          />}\n      </aside>\n    );\n  }\n}\n\nLNB.propTypes = {\n  useExample: PropTypes.bool,\n  tabIndex: PropTypes.number,\n  selectedNavItemId: PropTypes.string,\n  width: PropTypes.number\n};\n\nexport default LNB;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Resizable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleMouseMove = props.handleMouseMove;\n    this.handleMouseDown = this.handleMouseDown.bind(this);\n    this.handleMouseUp = this.handleMouseUp.bind(this);\n  }\n\n  handleMouseDown() {\n    document.addEventListener('mousemove', this.handleMouseMove, false);\n    document.addEventListener('mouseup', this.handleMouseUp, false);\n  }\n\n  handleMouseUp() {\n    document.removeEventListener('mousemove', this.handleMouseMove, false);\n    document.removeEventListener('mouseup', this.handleMouseUp, false);\n  }\n\n  render() {\n    return (\n      <div\n        className=\"resize-handle\"\n        onMouseDown={this.handleMouseDown}\n        style={{left: this.props.left}}\n      >\n        Resizable\n      </div>\n    );\n  }\n}\n\nResizable.propTypes = {\n  handleMouseMove: PropTypes.func,\n  left: PropTypes.number\n};\n\nexport default Resizable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {StaticQuery, graphql} from 'gatsby';\n\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport LNB from '../components/LNB';\nimport Resizable from '../components/Resizable';\n\nconst LNB_WIDTH = 260;\nconst LNB_MIN_WIDTH = 212;\n\nexport class Layout extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      width: LNB_WIDTH\n    };\n\n    this.handleMouseMove = this.changeWidth.bind(this);\n  }\n\n  changeWidth(ev) {\n    ev.preventDefault(); // to prevent user-select's work\n\n    this.setState({\n      width: Math.max(ev.pageX, LNB_MIN_WIDTH)\n    });\n  }\n\n  render() {\n    const {\n      data,\n      tabIndex,\n      selectedNavItemId,\n      children\n    } = this.props;\n    const {\n      header,\n      footer,\n      useExample\n    } = data;\n    const lnbWidth = this.state.width;\n\n    return (\n      <div className=\"wrapper\">\n        <Header data={header} />\n        <main\n          className=\"body\"\n          style={{paddingLeft: lnbWidth}}\n        >\n          <LNB\n            useExample={useExample}\n            tabIndex={tabIndex}\n            selectedNavItemId={selectedNavItemId}\n            width={lnbWidth}\n          />\n          <section className=\"content\">\n            {children}\n          </section>\n          <Resizable\n            left={lnbWidth}\n            handleMouseMove={this.handleMouseMove}\n          />\n        </main>\n        <Footer infoList={footer} />\n      </div>\n    );\n  }\n}\n\nconst LayoutWrapper = (props) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allLayoutJson {\n          edges {\n            node {\n              header {\n                logo {\n                  src\n                  linkUrl\n                }\n                title {\n                  text\n                  linkUrl\n                }\n                version\n              }\n              footer {\n                title\n                linkUrl\n              }\n              useExample\n            }\n          }\n        }\n      }\n    `}\n    render={data => <Layout data={data.allLayoutJson.edges[0].node} {...props} />}\n  />\n);\n\nLayout.propTypes = {\n  data: PropTypes.object,\n  tabIndex: PropTypes.number,\n  selectedNavItemId: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.array\n  ])\n};\n\nexport default LayoutWrapper;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","var global = require('./_global');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar dP = require('./_object-dp').f;\nvar gOPN = require('./_object-gopn').f;\nvar isRegExp = require('./_is-regexp');\nvar $flags = require('./_flags');\nvar $RegExp = global.RegExp;\nvar Base = $RegExp;\nvar proto = $RegExp.prototype;\nvar re1 = /a/g;\nvar re2 = /a/g;\n// \"new\" creates a new object, old webkit buggy here\nvar CORRECT_NEW = new $RegExp(re1) !== re1;\n\nif (require('./_descriptors') && (!CORRECT_NEW || require('./_fails')(function () {\n  re2[require('./_wks')('match')] = false;\n  // RegExp constructor can alter flags and IsRegExp works correct with @@match\n  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';\n}))) {\n  $RegExp = function RegExp(p, f) {\n    var tiRE = this instanceof $RegExp;\n    var piRE = isRegExp(p);\n    var fiU = f === undefined;\n    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p\n      : inheritIfRequired(CORRECT_NEW\n        ? new Base(piRE && !fiU ? p.source : p, f)\n        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)\n      , tiRE ? this : proto, $RegExp);\n  };\n  var proxy = function (key) {\n    key in $RegExp || dP($RegExp, key, {\n      configurable: true,\n      get: function () { return Base[key]; },\n      set: function (it) { Base[key] = it; }\n    });\n  };\n  for (var keys = gOPN(Base), i = 0; keys.length > i;) proxy(keys[i++]);\n  proto.constructor = $RegExp;\n  $RegExp.prototype = proto;\n  require('./_redefine')(global, 'RegExp', $RegExp);\n}\n\nrequire('./_set-species')('RegExp');\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Tabs extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selected: props.tabIndex || 0\n    };\n  }\n\n  selectTab(index) {\n    this.setState({\n      selected: index\n    });\n  }\n\n  render() {\n    const {\n      children\n    } = this.props;\n\n    return (\n      <div className=\"tabs\">\n        <div className=\"tab-buttons\">\n          {children.map((child, index) => {\n            if (child) {\n              return (\n                <button\n                  key={`tab-${index}`}\n                  className={`tab${this.state.selected === index ? ' selected' : ''}`}\n                  onClick={() => (this.selectTab(index))}\n                >\n                  {child.props.name}\n                </button>\n              );\n            }\n\n            return null;\n          })}\n        </div>\n        {children[this.state.selected]}\n      </div>\n    );\n  }\n}\n\nTabs.propTypes = {\n  tabIndex: PropTypes.number,\n  children: PropTypes.array.isRequired\n};\n\nexport default Tabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TabContent extends React.Component {\n  render() {\n    const {\n      hasIframe,\n      children\n    } = this.props;\n\n    return (\n      <div className={`tab-content${hasIframe ? ' iframe' : ''}`}>\n        {children}\n      </div>\n    );\n  }\n}\n\nTabContent.propTypes = {\n  hasIframe: PropTypes.bool,\n  children: PropTypes.object.isRequired\n};\n\nexport default TabContent;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}