{"version":3,"sources":["webpack:///./src/components/Iframe.js","webpack:///./src/components/CodeBlock.js","webpack:///./src/templates/example-page.js"],"names":["Iframe","render","className","frameBorder","width","height","src","this","props","React","Component","CodeBlock","dangerouslySetInnerHTML","__html","ExamplePage","pathname","hash","examplePageJson","file","title","codeJs","codeHtml","selectedNavItemId","tabIndex","name","hasIframe","pathPrefix","code","query"],"mappings":"iNAGMA,IAkBN,E,gLAjBEC,kBACE,OACE,4BACEC,UADF,qBAEEC,YAFF,IAGEC,MAHF,OAIEC,OAJF,MAKEC,IAAKC,KAAKC,MANd,O,GAFiBC,IAAMC,WCArBC,IAcN,E,gLAbEV,kBACE,OACE,yBAAKC,UAAL,qCACE,0BAAMU,wBAAyB,CAAEC,OAAQN,KAAKC,MAFlD,U,GAFoBC,IAAMC,W,UCU9B,IAEMI,E,gLACJb,kBAAU,IAAD,EACoBM,KAAKC,MADzB,SACCO,EADD,WACWC,EADX,SAE2BT,KAAKC,MAFhC,KAECS,EAFD,kBAEkBC,EAFlB,OAGCC,EAA4BF,EAH7B,MAGQG,EAAqBH,EAH7B,OAGgBI,EAAaJ,EAH7B,SAKDK,EAAiB,GAAMP,aAAN,MAAvB,EAEA,OACE,uBAAQQ,SAAR,EAAqBD,kBAArB,GACE,gCACE,wBAAIpB,UAAJ,SAFJ,IAIE,iCACE,2BACE,uBAAYsB,KAAZ,SAA0BC,WAA1B,GACE,qBAAQnB,IAAQoB,wBAAcR,EAFlC,gBAIGE,EACC,uBAAYI,KAAZ,cACE,qBAAWG,KAFR,KAJT,KASGN,EACC,uBAAYG,KAAZ,QACE,qBAAWG,KAFN,KAfjB,S,GARsBlB,IAAMC,WAgDnBkB,GAFb,YAEO","file":"component---src-templates-example-page-js-de7221c03829a000f227.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Iframe extends React.Component {\n  render() {\n    return (\n      <iframe\n        className=\"tab-content iframe\"\n        frameBorder={'0'}\n        width={'100%'}\n        height={'800'}\n        src={this.props.src}\n      />\n    );\n  }\n}\n\nIframe.propTypes = {\n  src: PropTypes.string\n};\n\nexport default Iframe;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass CodeBlock extends React.Component {\n  render() {\n    return (\n      <pre className=\"codeblock tui-language-javascript\">\n        <code dangerouslySetInnerHTML={{ __html: this.props.code }} />\n      </pre>\n    );\n  }\n}\n\nCodeBlock.propTypes = {\n  code: PropTypes.string\n};\n\nexport default CodeBlock;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport Tabs from '../components/Tabs';\nimport TabContent from '../components/TabContent';\nimport Iframe from '../components/Iframe';\nimport CodeBlock from '../components/CodeBlock';\n\nimport '../styles/main.scss';\n\n/* global __PATH_PREFIX__*/\nconst pathPrefix = __PATH_PREFIX__;\n\nclass ExamplePage extends React.Component {\n  render() {\n    const { pathname, hash } = this.props.location;\n    const { examplePageJson, file } = this.props.data;\n    const { title, codeJs, codeHtml } = examplePageJson;\n\n    const selectedNavItemId = `${pathname.split('/').pop()}${hash}`;\n\n    return (\n      <Layout tabIndex={1} selectedNavItemId={selectedNavItemId}>\n        <header>\n          <h2 className=\"title\">{title}</h2>\n        </header>\n        <article>\n          <Tabs>\n            <TabContent name=\"Result\" hasIframe={true}>\n              <Iframe src={`${pathPrefix}/${file.relativePath}`} />\n            </TabContent>\n            {codeJs ? (\n              <TabContent name=\"JavaScript\">\n                <CodeBlock code={codeJs} />\n              </TabContent>\n            ) : null}\n            {codeHtml ? (\n              <TabContent name=\"HTML\">\n                <CodeBlock code={codeHtml} />\n              </TabContent>\n            ) : null}\n          </Tabs>\n        </article>\n      </Layout>\n    );\n  }\n}\n\nExamplePage.propTypes = {\n  data: PropTypes.shape({\n    examplePageJson: PropTypes.object.isRequired,\n    file: PropTypes.object.isRequired\n  }),\n  location: PropTypes.shape({\n    pathname: PropTypes.string,\n    hash: PropTypes.string\n  })\n};\n\nexport default ExamplePage;\n\nexport const query = graphql`\n  query($id: String!, $filename: String!) {\n    # query for example page data\n    examplePageJson(pid: { eq: $id }) {\n      title\n      codeJs\n      codeHtml\n    }\n\n    # query for iframe src\n    file(extension: { eq: \"html\" }, name: { eq: $filename }) {\n      relativePath\n    }\n  }\n`;\n"],"sourceRoot":""}